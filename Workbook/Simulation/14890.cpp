#include <bits/stdc++.h>

using namespace std;

int N, L;
int board[101][101];

int main(){
	
	ios::sync_with_stdio(0); cin.tie(0);
	
	cin >> N >> L;
	
	for(int i = 0; i < N; i++){
		for(int j = 0; j < N; j++){
			cin >> board[i][j];
		}
	}
	
	cout << '\n';

	cout << N << ' ' << L << '\n';
	
	for(int i = 0; i < N; i++){
		for(int j = 0; j < N; j++){
			cout << board[i][j] << ' ';
		}
		cout << '\n';
	}
	
	return 0;
}

/*
nxn인 지도 각 칸에는 그 곳의 높이가 적혀있음
이 지도에서 지나갈 수 있는 길이 몇 개 있는지 알아보는 프로그램
길이란 한 행 또는 한 열 전부를 나타낸다. 
한쪽 끝에서 다른쪽 끝까지 지나가는 것

N=6인 지도
3 3 3 3 3 3
2 3 3 3 3 3
2 2 2 3 2 3
1 1 1 2 2 2
1 1 1 3 3 1
1 1 2 3 3 2
길은 총 2N개가 있다

길을 지나갈 수 있으려면 길에 속한 모든 칸의 높이가 같아야 한다.
또는 경사로를 놓아서 지나갈 수 있는 길을 만들 수 있다.
경사로는 높이가 항상 1이며, 길이는 L이다. 또 개수는 매우 많아
부족할 일이 없다. 경사로는 낮은 칸과 높은 칸을 연결하며 아래와
같은 조건을 만족해야 한다.

경사로는 낮은 칸에 놓으며 L개의 연속된 칸에 경사로의 바닥이 모두 접해야 한다.
낮은 칸과 높은 칸의 높이 차이는 1이여야 한다.
경사로를 놓을 낮은 칸의 높이는 모두 같아야 하고, L개의 칸이 연속되어 있어야 한다. 한다.

경사로를 놓을 수 없는 경우
경사로를 놓은 곳에 또 경사로를 놓는 경우
낮은 칸과 높은 곳의 높이 차가 1이 아닌 경우
낮은 지점의 칸의 높이가 모두 같지 않거나, L개가 연속되지 않은 경우
경사로를 놓다가 범위를 벗어나는 경우



*/