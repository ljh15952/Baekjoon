#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second

// 테트로미노의 모든 조합
pair<int, int> tetro[19][4] = {
    // 청록색 블록
    {{0, 0}, {0, 1}, {0, 2}, {0, 3}},
    {{0, 0}, {1, 0}, {2, 0}, {3, 0}},
    // 노랑색 블록
    {{0, 0}, {1, 0}, {0, 1}, {1, 1}},
    // 주황색 블록
    {{0, 0}, {0, 1}, {0, 2}, {1, 2}},
    {{0, 0}, {0, 1}, {0, 2}, {1, 0}},
    {{1, 0}, {1, 1}, {1, 2}, {0, 2}},
    {{1, 0}, {1, 1}, {1, 2}, {0, 0}},

    {{0, 1}, {1, 1}, {2, 1}, {0, 0}},
    {{0, 1}, {1, 1}, {2, 1}, {2, 0}},
    {{0, 0}, {1, 0}, {2, 0}, {0, 1}},
    {{0, 0}, {1, 0}, {2, 0}, {2, 1}},
    // 초록색 블록
    {{0, 0}, {0, 1}, {1, 1}, {1, 2}},
    {{1, 0}, {1, 1}, {0, 1}, {0, 2}},
    {{0, 0}, {1, 0}, {1, 1}, {2, 1}},
    {{0, 1}, {1, 1}, {1, 0}, {2, 0}},
    // 자주색 블록
    {{0, 0}, {0, 1}, {0, 2}, {1, 1}},
    {{1, 0}, {1, 1}, {1, 2}, {0, 1}},
    {{0, 0}, {1, 0}, {2, 0}, {1, 1}},
    {{0, 1}, {1, 1}, {2, 1}, {1, 0}}};
int board[505][505];
int n, m;


int bruteForce(int x, int y){
	
	int mx = 0;
	for(int i = 0; i < 19; i++){
		int sum = 0;
		for(int j = 0; j < 4; j++)
			sum += board[x + tetro[i][j].X][y + tetro[i][j].Y];
		mx = max(mx, sum);
	}
	return mx;	
}

int main(){
	
	ios::sync_with_stdio(0); cin.tie(0);
	
	cin >> n >> m;
	
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			cin >> board[i][j];
		}
	}
	
	int ans = 0;
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			ans = max(ans, bruteForce(i , j));
		}
	}
	
	cout << ans << '\n';
	
	return 0;
}

/*

테트리미노

폴리오미노 크기가 1x1인 정사각형을 여러 개 이어서 붙인 도형
다음과 같은 조건 만족
정사각형은 서로 겹치면 안된다.
도형은 모두 연결되어 있어야 한다.
정사각형의 변끼리 연결되어 있어야 한다. 

NxM인 종이 위에 테트로미노 하나를 놓으려한다.
종이는 1x1 크기의 칸 각각의 칸에는 정수가 하나 쓰여있음

테트로미노 하나를 적절히 놓아서 테트로미노가 놓인 칸에 쓰여 있는 수들의 합을 최대로 하는 프로그램
테트로미노 회전, 대칭시켜도 된다.


*/