#include <iostream>
#include <algorithm>
using namespace std;

int dp[100000];

int main(){
	
	int n;
	cin >> n;
	

	/*
	풀이
	dp[a] = b -> a를 제곱수의 합으로 나타냈을 때 최소항의 개수는 b개
	ex) dp[11] = 3 11을 제곱수의 합으로 3개의 항이 있다. 3,1,1
	
	* 4를 제곱수의 합 만드는 경우의 수
	1) 1+1+1+1 -> 4개
	2) 4(2^2) -> 2개
	--->dp[4] = 2
	
	* 5를 제곱수의 합 만들기
	1) 1+1+1+1+1 5개
	2) 4(2^2) + 1 2개
	--->dp[5] = 2
	
	*8을 제곱수의 합으로 만드는 경우의 수
	1) 1+1+1+1+1+1+1+1 -> 8개
	2) 4(2^2) + 1+1+1+1 -> 5개
	3) 4(2^2) + 4(2^2) -> 2개
	--->dp[8] = 2
	
	*9만들기
	1) 1+1+1+1+1+1+1+1+1 -> 9개
	2) 4(2^2) + 1+1+1+1+1 -> 6개
	3) 4(2^2) + 4(2^2) + 1 -> 3개
	4) 9(3^3) -> 1개
	--->dp[9] = 1
	
	dp[n] = min(dp[n-1^2]+1,dp[n-2^2]+1,dp[n-3^2]+1...)
	
	
	*/
	
	for(int i = 1; i <= n; ++i){
		dp[i] = i;
		for(int j = 1; j * j <= i; ++j){
			dp[i] = min(dp[i],dp[i - j*j]+1);
		}
	}
	cout << dp[n] << endl;
	
	return 0;
}